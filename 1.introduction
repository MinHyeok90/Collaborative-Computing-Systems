토픽 -> 이해 주 목표
1.토픽은 어떤것들이 있을까?
2.개념은? 프로세스는?

개요
컨텐츠 공유 시스템을 만들 때 어떻게 해야 하는가
어떤 이슈가 있고 어떤 원리, 구조로 이루어 지는가 ex) client, 변형p2p

어떤 topic이 있는가
  어떻게 디자인, 개발할 것인가 (다중 사용자 시스템을)
  개발할 때 풀어야 할 문제들은?
    ex)최대 사용자 문제 : 사용자들이 접속하면 성능저하문제발생 -> 해결하는 방법, 기술들.
======================================================================================
1강.
  기술의 발전
    1980년 시작
    마이크로프로세서의 발전
    고성능 네트워크
    
  분산시스템의 정의
    독립적으로 돌아가는 여러 컴퓨터들의 집합(사용자들 입장에서는 하나의 시스템 또는 하나의 서비스로 보이는)
    주요 특징
      분산 시스템을 이루는 각 컴포넌트(컴퓨터)는 독립적이다
      유저(사람 혹은 프로그램)은 하나의 시스템을 다루는 것처럼 느껴진다.
  
  분산 시스템의 특징
    
    -------
컴포넌트의 차이에 상관없이 하나의 서비스를 받는 것. 분산시스템은 분산된 사실을 숨겨야 한다.
어디에서건 일관되고 동일한 방식으로 제공.
특징: (디자인을 잘 하면)확장이 용이하다. 쉬워야 한다.

분산 시스템의 middleware
  app < m(여기에 위치한 소프트웨어) < os
  이 덕분에 서로 다른 app끼리 동일한 middleware위에서 통신이 가능해진다.
  ex)java, 라이브러리등
  middleware는 user에게 직접 제공도 가능하고, 서버 쪽에서만 돌아갈 수 도 있다.
  *middleware를 사용하면 분산시스템을 숨길 수 있다.
  
분산 시스템의 목표
  자원관리는 쉽게, 빠르게 사용할 수 있도록 하기 위함. - 유저 기준. 내려갈수록 시스템 기준
  분산 사실 숨기기 (안보이게 가리기). 여러 컴퓨터에서 제공, 자원 프로세스
  표준 규약을 지키며 (여러 app위해. ex:웹, 브라우저)\
  확장성 
    1.크기 확장성 : 사용자수, 서버갯수, 컴포넌트 수 등이 많아도 관리가 잘되는 특성
    2.지리적 확장성:지구 어디에서나 이용가능한 특성 
    3.관리적 확장성
    
세부목적
  목적1. 원격지에서 유저가 순쉽게 자원관리
      *그룹웨어 : 그룹이 같이 사용하는 소프트웨어
                  "동시에"사용, 편집할 수 있는
      연결성과 공유성의 증가 + 보안
      
  목적2. 분산사실 숨기기 : 잘 가리면 좋다.
      사용자 입장에서는 분산이란 사실을 알 필요가 없다.
      숨김 단계들(분산종류)
        1)접근, 표현상빅(os별, 문서별)
        2)지리적 위치   - url. 세부위치는 숨겨
        3)지리적 이동   - 스토리지 정보 저장서버 변경
        4)재이동        -   "
        5)복제
        6)동시성        - 2명 이상의 유저가 동시에 동일한 파일에 접근, 수정, 서버를 이용할 때. 락킹메커니즘 3개. 
        7)실패          - 서버접속 실패사실을 숨긴다.
        
      *어느정도로 숨겨야 할까? 모두 다 숨긴다고 좋은것은 아니다.
        ex)매일 받던 전자신문. 유저가 시간대역이 다른 곳으로 이동해 생기는 오루. -> 사용자 위치를 시스템에게 숨겼다.
          ->사용자의 현재위치는?.. ->좋지않은 예제
          
        지역적 예제) 서버는 샌프란시스코, 사용자는 암스테르담일때, 지역적인 특징을 숨길 수 있는가?
          정보전송에 상당한 시간 소모.
          해결책 -> 미리 이동 혹은 복사해둔다.
        =>숨기는게 좋지많은 않다.
        
      

